#*****************************************************************************************
# Manuscript: "Influence of intermittent stream dynamics on predator-prey interactions"
# 1*Milena Gonçalves-Silva, 2Elvira D’Bastiani, 3Thibault Datry, 1Carla Ferreira Rezende
# 1Programa de Pós-Graduação em Ecologia e Recursos Naturais, Universidade Federal do Ceará, Brasil.
# 2Department of Ecology and Evolutionary Biology, University of California, Los Angeles, USA.
# 3INRAE, UR RiverLy, Centre de Lyon-Villeurbanne, Villeurbanne, France.
# *Corresponding author: Milena Gonçalves-Silva, e-mail: milenagoncalves.bio@gmail.com
# Script created by: Milena Gonçalves-Silva
#*****************************************************************************************

#Citation: Gonçalves-Silva, M., D’Bastiani, E., Datry, T., & Rezende, C. F. (Year). Influence of intermittent stream dynamics on predator-prey interactions. Journal of [Journal Name], [Year], [Volume(Issue)], [Page Range]. DOI: [DOI Number].

#########################################################################################################################################
#########################################################################################################################################
#Question: Does the composition of fish species change throughout the flowing and dry hydrological phases?
#########################################################################################################################################
#########################################################################################################################################

# Setup 
#To remove all objects stored in the current workspace
rm(list=ls())

#To clean up the garbage collection in R, you can use the gc() function:
gc()

# Directory
setwd()

# Load required packages
install.packages("vegan")
library(vegan)

# Read data from CSV file
data <- read.csv("fishabundance.csv", row.names=1, sep=";") # Communities in rows and species in columns
View(data)  # View the data

# Many multivariate analyses are sensitive to absolute abundance in a sample and may distort results. One solution is to take absolute abundance data and convert them into estimates of relative abundance. We can do this in the vegan package using the decostand function. Relative abundance is the percentage composition of an organism relative to the total number of organisms in the area. There are various methods for standardizing data in decostand. To calculate relative abundance, we'll use "total".

# Convert absolute abundance to relative abundance
data.rel <- decostand(data, method="total")

# Calculate distance matrix
data_distmat <- vegdist(data.rel, method="bray")

# Create an easy-to-view matrix and write to CSV
data_distmat <- as.matrix(data_distmat, labels=T)
write.csv(data_distmat, "data_distmat.csv")

# Run Non-metric Multidimensional Scaling (NMDS) using metaMDS
data_NMS <- metaMDS(data_distmat,
                    distance="bray",
                    k=3,
                    maxit=999,
                    trymax=500,
                    wascores=TRUE)

# Shepard's test/goodness of fit
goodness(data_NMS)  # Test statistics for goodness of fit for each point
stressplot(data_NMS)  # Shepard's diagram
# This is a Shepard diagram with correlation statistics indicating the fit between the ordination distances and observed dissimilarities. Proceed to the plotting steps of your NMDS if you identify a minimized stress solution.

# Plot points in ordination space
plot(data_NMS, "sites")  # Distance plot
orditorp(data_NMS, "sites")  # Point labels

plot(data_NMS)  # NMDS plot

# Calculate and plot species scores
data.spp <- sppscores(data_NMS) <- data.rel

treat <- c(rep("Treatment1", 22), rep("Treatment2", 23))
colors <- c(rep("grey90", 22), rep("grey50", 23))
ordiplot(data_NMS, type="n")

for (i in unique(treat)) {
  ordihull(data_NMS$point[grep(i, treat), ], draw="polygon",
           groups=treat[treat==i], col=colors[grep(i, treat)], label=FALSE)
}

orditorp(data_NMS, display="species", col="black", air=0.01, cex=1.25)
orditorp(data_NMS, display="sites", col=c(rep("red", 23), rep("blue", 23)),
         air=0.01, cex=0.75)

